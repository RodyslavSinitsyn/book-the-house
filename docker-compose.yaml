version: '3.8'

services:

  postgres:
    image: postgres:15
    container_name: bth-postgres
    restart: always
    env_file:
      - bth-post-service/.env
    environment:
      POSTGRES_USER: bth-user # TODO: Check how to get form env
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bth-db
    ports:
      - "5432:5432"
    volumes:
      - bth-postgres-data:/var/lib/postgresql/data

  bth-ui:
    image: bth-ui:latest
    container_name: bth-ui
    env_file:
      - bth-ui/.env
    ports:
      - "8080:8080"  # Map local port 8080 to container port 8080
    networks:
      - bth-network

  # https://hub.docker.com/_/redis
  redis:
    image: redis:latest
    container_name: bth-redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--loglevel", "debug" ]
    networks:
      - bth-network

  # https://hub.docker.com/r/rediscommander/redis-commander
  redis-commander:
    image: rediscommander/redis-commander
    container_name: bth-redis-commander
    environment:
      - PORT=8091
      - REDIS_HOSTS=redis:bth-redis:6379
    ports:
      - "8091:8091"
    networks:
      - bth-network

  # https://hub.docker.com/_/elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: bth-elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elasticpassword
#      - xpack.security.enabled=true
    ports:
      - "9200:9200"
    volumes:
      - bth-elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - bth-network

  # https://hub.docker.com/_/logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.3
    container_name: bth-logstash
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=elastic
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=elasticpassword
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=bth-elasticsearch:9200
      - XPACK_MONITORING_ENABLED=true
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - bth-network

  # https://hub.docker.com/_/kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: bth-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://bth-elasticsearch:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS1zYTpiSDdNbndhMlFoT0tnZkdSclZTQ2JR
    ports:
      - "5601:5601"
    networks:
      - bth-network
    depends_on:
      - elasticsearch

  minio:
    image: minio/minio:latest
    container_name: bth-minio
    ports:
      - "9000:9000" # MinIO browser/API
      - "9001:9001" # MinIO management console
    environment:
      MINIO_ROOT_USER: testuser
      MINIO_ROOT_PASSWORD: testpassword  # Root secret key
    volumes:
      - bth-minio-data:/data
    networks:
      - bth-network
    command: server /data --console-address ":9001"

  rabbitmq:
    image: "rabbitmq:management"
    container_name: bth-rabbitmq
    ports:
      - "15672:15672" # Management plugin port (web UI)
      - "5672:5672"   # RabbitMQ AMQP protocol
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - bth-network

volumes:
  bth-postgres-data:
  bth-localstack-data:
  bth-minio-data:
  bth-elasticsearch-data:

networks:
  bth-network:
    driver: bridge  # Defines the network for communication between services
